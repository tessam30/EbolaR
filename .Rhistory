panel.background = element_rect(fill = "white"), # Make background white
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #remove grid
axis.ticks.y = element_blank(), #Remove axis
axis.text.y = element_text(hjust = -0.5, size = 12, colour = dgrayL), #soften axis text
axis.text.x = element_text(hjust = 1, size = 12, colour = dgrayL),
axis.ticks.x=element_blank(), # remove x-axis ticks
#plot.margin = unit(c(1,1,1,1), "cm"),
plot.title = element_text(lineheight = .8)) + # Move plot title up
scale_x_continuous(breaks = seq(1960, 2010, 10), expand = c(0.02,0.02)) + #customize x-axis
scale_y_continuous(breaks = seq(0, 80, 10)) + # customize y-axis
labs(x = "", y = "Urban population (% of total)\n",
title = "Urbanization rose the fatest in East Asia and the Pacific", size = 14) +
scale_colour_brewer(palette="Set1")
pp
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year)) +
geom_path(alpha = 0.1) + geom_point(size = 3.5)
p <- p + theme(legend.position = "bottom", legend.title=element_blank(),
panel.border = element_blank(), legend.key = element_blank(),
legend.text = element_text(size = 13), #Customize legend
plot.title = element_text(hjust = 0, size = 16, face = "bold"), # Adjust plot title
panel.background = element_rect(fill = "white"), # Make background white
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #remove grid
axis.ticks.y = element_blank(), #Remove axis
axis.text.y = element_text(hjust = -0.5, size = 12, colour = dgrayL), #soften axis text
axis.text.x = element_text(hjust = 1, size = 12, colour = dgrayL),
axis.ticks.x=element_blank(), # remove x-axis ticks
#plot.margin = unit(c(1,1,1,1), "cm"),
plot.title = element_text(lineheight = .8)) + # Move plot title up
scale_x_continuous(breaks = seq(1960, 2010, 10), expand = c(0.02,0.02)) + #customize x-axis
scale_y_continuous(breaks = seq(0, 80, 10)) + # customize y-axis
labs(x = "", y = "Urban population (% of total)\n",
title = "Urbanization rose the fatest in East Asia and the Pacific", size = 14) +
scale_colour_brewer(palette="Set1") + facet_wrap(~country, ncol =5)
pp
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year)) +
geom_line(alpha = 0.1) + geom_point(size = 3.5)
p <- p + theme(legend.position = "bottom", legend.title=element_blank(),
panel.border = element_blank(), legend.key = element_blank(),
legend.text = element_text(size = 13), #Customize legend
plot.title = element_text(hjust = 0, size = 16, face = "bold"), # Adjust plot title
panel.background = element_rect(fill = "white"), # Make background white
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #remove grid
axis.ticks.y = element_blank(), #Remove axis
axis.text.y = element_text(hjust = -0.5, size = 12, colour = dgrayL), #soften axis text
axis.text.x = element_text(hjust = 1, size = 12, colour = dgrayL),
axis.ticks.x=element_blank(), # remove x-axis ticks
#plot.margin = unit(c(1,1,1,1), "cm"),
plot.title = element_text(lineheight = .8)) + # Move plot title up
scale_x_continuous(breaks = seq(1960, 2010, 10), expand = c(0.02,0.02)) + #customize x-axis
scale_y_continuous(breaks = seq(0, 80, 10)) + # customize y-axis
labs(x = "", y = "Urban population (% of total)\n",
title = "Urbanization rose the fatest in East Asia and the Pacific", size = 14) +
scale_colour_brewer(palette="Set1") + facet_wrap(~country, ncol =5)
pp
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year)) +
geom_line(alpha = 0.1) + geom_point(size = 3.5)
p
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = country)) +
geom_line(alpha = 0.1) + geom_point(size = 3.5)
p
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = country)) +
geom_line(alpha = 0.1) + geom_point(size = 3.5)
p <- p + theme(legend.position = "top", legend.title=element_blank(),
panel.border = element_blank(), legend.key = element_blank(),
legend.text = element_text(size = 13), #Customize legend
plot.title = element_text(hjust = 0, size = 16, face = "bold"), # Adjust plot title
panel.background = element_rect(fill = "white"), # Make background white
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #remove grid
axis.ticks.y = element_blank(), #Remove axis
axis.text.y = element_text(hjust = -0.5, size = 12, colour = dgrayL), #soften axis text
axis.text.x = element_text(hjust = 1, size = 12, colour = dgrayL),
axis.ticks.x=element_blank(), # remove x-axis ticks
#plot.margin = unit(c(1,1,1,1), "cm"),
plot.title = element_text(lineheight = .8)) + # Move plot title up
scale_x_continuous(breaks = seq(1960, 2010, 10), expand = c(0.02,0.02)) + #customize x-axis
scale_y_continuous(breaks = seq(0, 80, 10)) + # customize y-axis
labs(x = "", y = "Urban population (% of total)\n",
title = "Urbanization rose the fatest in East Asia and the Pacific", size = 14) +
scale_colour_brewer(palette="Set1") + facet_wrap(~country, ncol =5)
pp
names(d)
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = country)) +
geom_line(alpha = 0.1) + geom_point(size = 3.5) + facet_wrap(~region)
p
p <- ggplot(d, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = country)) +
geom_line(alpha = 0.1) + geom_point(size = 3.5) + facet_wrap(~region)
p
p <- ggplot(d, aes(y = SP.URB.TOTL.IN.ZS, x = year)) +
geom_line(alpha = 0.1) + geom_point(size = 1) + facet_wrap(~region)
p
p <- ggplot(d, aes(y = SP.URB.TOTL.IN.ZS, x = year)) +
geom_path(alpha = 0.1) + geom_point(size = 1) + facet_wrap(~region)
p
p <- ggplot(d, aes(y = SP.URB.TOTL.IN.ZS, x = year)) +
geom_path(alpha = 0.1, colour = country) + facet_wrap(~region)
p <- ggplot(d, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = region)) +
geom_path(alpha = 0.1) + facet_wrap(~region)
p
p <- ggplot(d, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = region)) +
geom_path(alpha = 0.9) + facet_wrap(~region)
p
p <- ggplot(d, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = region)) +
geom_path(alpha = 0.9) + facet_wrap(~region) + theme(legend.position = "top")
p
# --- Make first basic spaghetti plot of data
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = country)) +
geom_path(alpha = 0.1) + geom_point(size = 3.5)
# --- Customize plot
pp <- p + theme(legend.position = "bottom", legend.title=element_blank(),
panel.border = element_blank(), legend.key = element_blank(),
legend.text = element_text(size = 13), #Customize legend
plot.title = element_text(hjust = 0, size = 16, face = "bold"), # Adjust plot title
panel.background = element_rect(fill = "white"), # Make background white
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #remove grid
axis.ticks.y = element_blank(), #Remove axis
axis.text.y = element_text(hjust = -0.5, size = 12, colour = dgrayL), #soften axis text
axis.text.x = element_text(hjust = 1, size = 12, colour = dgrayL),
axis.ticks.x=element_blank(), # remove x-axis ticks
#plot.margin = unit(c(1,1,1,1), "cm"),
plot.title = element_text(lineheight = .8)) + # Move plot title up
scale_x_continuous(breaks = seq(1960, 2015, 5), expand = c(0.02,0.02)) + #customize x-axis
scale_y_continuous(breaks = seq(10, 80, 10)) + # customize y-axis
labs(x = "", y = "Urban population (% of total)\n",
title = "Urbanization rose the fatest in East Asia and the Pacific", size = 14) +
scale_colour_brewer(palette="Set1")
pp
# --- Make first basic spaghetti plot of data
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = country)) +
geom_path(alpha = 0.1) + geom_point(size = 3.5, shape = country)
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = country)) +
geom_path(alpha = 0.1) + geom_point(aes(size = 3.5, shape = country)
)
p
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = country)) +
geom_path(alpha = 0.1) + geom_point(aes(size = 3.5, colour = country))
p
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = country)) +
geom_path(alpha = 0.1) + geom_point(aes(size = 3.5, size = (SP.URB.TOTL.IN.ZS/10)))
p
# --- Make first basic spaghetti plot of data
p <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = country)) +
geom_path(alpha = 0.1) + geom_point(aes(size = (SP.URB.TOTL.IN.ZS/10)))
p
pp <- p + theme(legend.position = "top", legend.title=element_blank(),
panel.border = element_blank(), legend.key = element_blank(),
legend.text = element_text(size = 13), #Customize legend
plot.title = element_text(hjust = 0, size = 16, face = "bold"), # Adjust plot title
panel.background = element_rect(fill = "white"), # Make background white
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #remove grid
axis.ticks.y = element_blank(), #Remove axis
axis.text.y = element_text(hjust = -0.5, size = 12, colour = dgrayL), #soften axis text
axis.text.x = element_text(hjust = 1, size = 12, colour = dgrayL),
axis.ticks.x=element_blank(), # remove x-axis ticks
#plot.margin = unit(c(1,1,1,1), "cm"),
plot.title = element_text(lineheight = .8)) + # Move plot title up
scale_x_continuous(breaks = seq(1960, 2015, 5), expand = c(0.02,0.02)) + #customize x-axis
scale_y_continuous(breaks = seq(10, 80, 10)) + # customize y-axis
labs(x = "", y = "Urban population (% of total)\n",
title = "Urbanization rose the fatest in East Asia and the Pacific", size = 14) +
scale_colour_brewer(palette="Set1")
pp
dat %>%
mjs_plot(x=date, y=value) %>%
mjs_line() %>%
mjs_axis_x(xax_format = "date") %>%
mjs_add_mouseover("function(d, i) {
$('{{ID}} svg .mg-active-datapoint')
.text('custom text : ' + d.date + ' ' + i);
}")
# ---- Download WDI package and install
# --- Install World Development Indicators API if not already installed
# install.packages("WDI")
# --- Clear the workspace
remove(list = ls())
# --- Load libraries & set working directory
libs <- c ("ggplot2", "dplyr", "RColorBrewer", "grid", "WDI",
"directlabels", "gridExtra")
# --- Load required libraries
lapply(libs, require, character.only=T)
# --- Search WDI database for urban population variables
WDIsearch('urban population')
# --- Extract urban population variable into new data frame
# --- Select extra = TRUE to extract extra variables and use tbl_df for dplyr
d <- tbl_df(WDI(country = "all", indicator = "SP.URB.TOTL.IN.ZS",
start = 1960, end = 2010, extra = TRUE, cache = NULL))
# Remove "(developing only)" from country name
d$country <- gsub("(developing only)", "", d$country, fixed = TRUE)
# --- Browse the names to get a sense of what is in the data
head(d)
tail(d)
unique(d$iso3c)
# --- Looking for EAP, ECA, LAC, MENA, SA, SSA using dplyr and ISO3 codes
#     see http://data.worldbank.org/developers/api-overview?print&book_recurse
fd <- filter(d, iso3c == "EAP" | iso3c == "ECA" | iso3c == "LAC" |
iso3c == "MNA" | iso3c == "SSA" | iso3c == "SAS") %>%
arrange(country, year)
# --- Create a unique id for each region
fd$id <- c(as.factor(fd$country))
# --- Lab RGB colors in case of customization
redL   	<- c("#B71234")
dredL 	<- c("#822443")
dgrayL 	<- c("#565A5C")
lblueL 	<- c("#7090B7")
dblueL 	<- c("#003359")
lgrayL	<- c("#CECFCB")
# --- First basic plot of data using paths and points
pf <- ggplot(fd, aes(y = SP.URB.TOTL.IN.ZS, x = year, colour = country)) + #define basic plot
geom_path(size = 0.25) + geom_point(size = 2.5) + #customize plot type
geom_hline(yintercept = 50, linetype="dotted", size = 1, alpha = .10) #add in horizontal lize
# --- Set legend status
legstat <- c("none")
# --- Customize plot
pp <- pf + theme(legend.position = legstat, legend.title=element_blank(),
panel.border = element_blank(), legend.key = element_blank(),
legend.text = element_text(size = 14), #Customize legend
plot.title = element_text(hjust = 0, size = 17, face = "bold"), # Adjust plot title
panel.background = element_rect(fill = "white"), # Make background white
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #remove grid
axis.text.y = element_text(hjust = -0.5, size = 14, colour = dgrayL), #soften axis text
axis.text.x = element_text(hjust = .5, size = 14, colour = dgrayL),
axis.ticks.y = element_blank(), # remove y-axis ticks
#axis.ticks.x=element_blank(), # remove x-axis ticks
#plot.margin = unit(c(1,1,1,1), "cm"),
plot.title = element_text(lineheight = 1 ), #
panel.grid.major = element_blank(), # remove facet formatting
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text.x = element_text(size = 13, colour = dgrayL, face = "bold"), # format facet panel text
panel.border = element_rect(colour = "black"),
panel.margin = unit(2, "lines")) + # Move plot title up
scale_x_continuous(breaks = seq(1960, 2010, 10), expand = c(0.05,0.05)) + #customize x-axis
scale_y_continuous(breaks = seq(0, 100, 10), limits = c(0, 100)) + # customize y-axis
labs(x = "", y = "Urban population (% of total)\n", # label y-axis and create title
title = "East Asia has experienced a rapid increase in the percent of the population living in urban areas in the last 30 years.", size = 13) +
facet_wrap(~ country, nrow = 1) + scale_colour_brewer(palette="Set2") # apply faceting and color palette
print(pp)
# Add a footnote to the graph using the gridExtra package
g <- arrangeGrob(pp, sub = textGrob("Source: World Bank World Development Indicators"
, x = 0, hjust = -0.25, vjust=-0.25,
gp = gpar(fontface = "italic", fontsize = 12, col = dgrayL)))
# --- Create variable reflecting working directory
wd <- c("C:/Users/t/Documents/GitHub/EbolaR")
setwd(wd)
# Save the plot
ggsave(g, filename = paste("Urbanization.png"), width=21, height=10, dpi = 300)
# --- Load new libraries for interactive graphics
library("reshape2")
library("zoo")
library("htmlwidgets")
library("dygraphs")
# --- Select and reshape data and try interactive plot
names(fd)
fds <- select(fd, country, SP.URB.TOTL.IN.ZS, year, id)
# --- Select and reshape the data to make interactive plots using the dygraphs package
fds_reshape <- dcast(fds, year ~ country, value.var = "SP.URB.TOTL.IN.ZS" )
# --- Add time variable to dataset
fds_wide <- as.data.frame(fds_reshape %>%
mutate(year = as.Date(sprintf("%d-01-01", year))))
# --- Declare time variable
date <- as.Date(fds_wide$year)
# --- Create subset of data containing only country values
urb <- subset(fds_wide, select = -c(year) )
# Rename variables for Legend
urb <-
colnames(urb)
View(fds)
View(fd)
colnames(urb) <- c("E. Asia", "Europe & C. Asia", "LAC", "MENA", "S. Asia" "Sub-Saharan Africa")
colnames(urb) <- c("E. Asia", "Europe & C. Asia", "LAC", "MENA", "S. Asia", "Sub-Saharan Africa")
urb.ts <- zoo(urb, order.by=date)
plot(urb.ts)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)\n", drawGrid = FALSE) %>%
dxAxis("x", label = "", drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 4, colors = RColorBrewer::)  %>%
dyLegend(width = 400) %>%
dyRangeSelector()
# Set data as time-series and make basic plots
urb.ts <- zoo(urb, order.by=date)
plot(urb.ts)
dygraph(urb.ts)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)\n", drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 4, colors = RColorBrewer::)  %>%
dyLegend(width = 400) %>%
dyRangeSelector()
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 4, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 400) %>%
dyRangeSelector()
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 400) %>%
dyRangeSelector()
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 400) %>%
dyRangeSelector()
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 400) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 400) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 400) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
?dygraph()
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years", group = year) %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 400) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years", group = "year") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 400) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyAxis("y", valueRange = c(0, 20, 40, 60, 80, 100))
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 400) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyAxis("y", valueRange = c(0, 100))
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 400) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyAxis("y", valueRange = c(0, 80))
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 600) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 400) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 800) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
?round()
round(urb, digits = 2)
round(urb, digits = 0)
urb <- round(urb, digits = 0)
urb.ts <- zoo(urb, order.by=date)
plot(urb.ts)
dygraph(urb.ts)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 800) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
names(fd)
fds <- select(fd, country, SP.URB.TOTL.IN.ZS, year, id)
# --- Select and reshape the data to make interactive plots using the dygraphs package
fds_reshape <- dcast(fds, year ~ country, value.var = "SP.URB.TOTL.IN.ZS" )
# --- Add time variable to dataset
fds_wide <- as.data.frame(fds_reshape %>%
mutate(year = as.Date(sprintf("%d-01-01", year))))
# --- Declare time variable
date <- as.Date(fds_wide$year)
# --- Create subset of data containing only country values
urb <- subset(fds_wide, select = -c(year) )
colnames(urb) <- c("E. Asia", "Europe & C. Asia", "LAC", "MENA", "S. Asia", "Sub-Saharan Africa")
# Set data as time-series and make basic plots
urb.ts <- zoo(urb, order.by=date)
plot(urb.ts)
dygraph(urb.ts)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 800) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 1000) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrew
er::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 1000) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = TRUE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 1000) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = TRUE)
dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 800) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = TRUE)
?saveWidget()
dg <- dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 800) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = TRUE)
dg
?saveWidget()
dg <- dygraph(urb.ts, main = "East Asia has experienced rapid urbanization in the past 30 years") %>%
dyAxis("y", label = "Urban population (% of total)", drawGrid = FALSE) %>%
dyAxis("x", pixelsPerLabel = 50, drawGrid = FALSE) %>%
dyOptions(axisLineWidth = 0.01, colors = RColorBrewer::brewer.pal(6, "Set2"))  %>%
dyLegend(width = 800) %>%
dyRangeSelector() %>%
dyHighlight(highlightCircleSize = 3.5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = TRUE)
setwd(wd)
saveWidget(dg, Urbanization, selfcontained = TRUE)
setwd(wd)
saveWidget(dg, "Urbanization", selfcontained = TRUE)
saveWidget(dg, "Urbanization.html", selfcontained = TRUE)
library("steamgraph")
library("steamgraphs")
library("streamgraphs")
library("streamgraph")
View(fds_reshape)
fd %>%
streamgraph("country", "SP.URB.TOTL.IN.ZS", "year", offset = "zero", interpolate="linear")
fd %>%
streamgraph("country", "SP.URB.TOTL.IN.ZS", "year", offset = "zero", interpolate="linear")
sg_legend(show = TRUE, label = "Country:")
?sg_axis_y()
fd %>%
streamgraph("country", "SP.URB.TOTL.IN.ZS", "year", offset = "zero", interpolate="linear")
sg_legend(show = TRUE, label = "Country:")
